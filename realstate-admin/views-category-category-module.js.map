{"version":3,"sources":["webpack:///./src/app/views/category/category-routing.module.ts","webpack:///./src/app/views/category/category.component.html","webpack:///./src/app/views/category/category.component.ts","webpack:///./src/app/views/category/category.module.ts"],"names":[],"mappings":"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","file":"views-category-category-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {CategoryComponent} from './category.component'\nconst routes: Routes = [\n  {\n    path:'',\n    component:CategoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoryRoutingModule { }\n","module.exports = \"\\n<button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addCategory\\\" style=\\\"margin-bottom: 10px;\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>Add Category</button>\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Categories List\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-striped\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\n            <thead>\\n              <tr>\\n                <th>S.No.</th>\\n                <th>Category Name</th>\\n                <th>Created On</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor = \\\"let category of categories; let i = index;\\\">\\n                <td>{{i+1}}</td>\\n                <td>{{category.name}}</td>\\n                <td>{{category.created | date: 'dd/MM/yyyy'}}</td>\\n                <td>\\n                    <button class=\\\"btn btn-primary\\\" (click)= setsubcategoryId(category._id) data-toggle=\\\"modal\\\" data-target=\\\"#addSubCategory\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>Sub-Category</button>\\n                    <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/categorydetails', category._id]\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>View</button> \\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"editCategory(category._id, category.name)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editCategory\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>Edit</button>\\n                    <!-- <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteCategory(category._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</button> -->\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"addCategory\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Add Category</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"addCategoryForm.reset()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"addCategoryForm\\\" (ngSubmit)=\\\"onCategorySubmit()\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label>Name</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"categoryName\\\">\\n                              <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addCategoryForm.controls['categoryName'].invalid && (formSubmited || addCategoryForm.controls['categoryName'].dirty)\\\">Please enter name</p>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Submit</button>\\n                          </div> \\n                      </div>\\n                  </div>\\n              </form>\\n          </div>\\n  \\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"addCategoryForm.reset()\\\" data-dismiss=\\\"modal\\\">cancel</button>\\n      </div>\\n  \\n      </div>\\n  </div>\\n</div>\\n\\n        <!-- Add subcategory modal -->\\n<div class=\\\"modal\\\" id=\\\"addSubCategory\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Sub-Category</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"subCategoryForm.reset()\\\" >&times;</button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <form [formGroup]=\\\"subCategoryForm\\\" (ngSubmit)=\\\"subCategorySubmit()\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"subcategory\\\">Name</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n                                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"subCategoryForm.controls['name'].invalid\\n                                 && (formSubmited || subCategoryForm.controls['name'].dirty)\\\">Please enter name</p>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <button class=\\\"btn btn-success\\\">Submit</button>\\n                            </div> \\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n    \\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" (click)=\\\"subCategoryForm.reset()\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">cancel</button>\\n        </div>\\n    \\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"editCategory\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit Category</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <form name=\\\"editCategoryForm\\\" #editCategoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"onEditCategorySubmit()\\\" novalidate>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label for=\\\"subcategory\\\">Name</label>\\n                              <input type=\\\"text\\\" name=\\\"categoryName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"categoryName\\\" #name=\\\"ngModel\\\" required>\\n                              <input type=\\\"hidden\\\" name=\\\"catId\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"catId\\\" #name=\\\"ngModel\\\" required>\\n                            </div>\\n                          <div class=\\\"form-group\\\">\\n                              <button class=\\\"btn btn-success\\\">Submit</button>\\n                          </div> \\n                      </div>\\n                  </div>\\n              </form>\\n          </div>\\n  \\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n  \\n      </div>\\n  </div>\\n</div>\\n\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" [template]=\\\"customLoadingTemplate\\\"></ngx-loading>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from './category.service';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder,Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\ndeclare var $;\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  // styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n  dtTrigger: Subject<any> = new Subject();\n  categories: any = [];\n  categoryid: string = '';\n  catId: string;\n  categoryName: string;\n  public loading = false;\n  addCategoryForm: FormGroup;\n  subCategoryForm: FormGroup;\n  formSubmited: boolean = false;\n  constructor(private categoryService: CategoryService, \n    private fb: FormBuilder,\n    private toastr:ToastrService) {\n    this.getDataFromServer()\n    this.addCategoryForm = this.fb.group({\n      categoryName:['', [Validators.required]],\n    })\n    this.subCategoryForm = this.fb.group({\n      name:['', [Validators.required]],\n    })\n  }\n\n  ngOnInit() {\n\n  }\n\n  getDataFromServer(){\n    this.loading = true;\n    this.categoryService.getAllCategory().subscribe(res => {\n      if(res.response_code == 200) {\n        this.loading = false;\n        this.categories = res.data\n        this.dtTrigger.next()\n      } \n    });\n  }\n\n  onCategorySubmit() {\n    this.formSubmited = true\n    if(this.addCategoryForm.invalid){\n      return\n    }\n    let data = {\n      name: this.addCategoryForm.value.categoryName\n    }\n    $('#addCategory').modal('hide');\n    this.categoryService.addCategory(data).subscribe(res => {\n      if(res.response_code == 200) {\n        this.toastr.success(res.response_message);\n        this.getDataFromServer();\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n  setsubcategoryId(categoryid) {\n    this.categoryid = categoryid;\n  }\n\n  subCategorySubmit(){\n    this.formSubmited = true\n    if(this.subCategoryForm.invalid){\n      return\n    }\n    let data = {\n      name: this.subCategoryForm.value.name,\n      categoryId: this.categoryid\n    }\n    $(\"#addSubCategory\").modal('hide')\n    this.categoryService.addSubCategory(data).subscribe(res => {\n      if(res.status == 'success') {\n        // this.loading = false;\n        this.toastr.success(res.response_message);\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    });\n  }\n\n  editCategory(id, catname){\n    this.catId = id\n    this.categoryName = catname;\n  }\n\n  onEditCategorySubmit() {\n    this.loading = true;\n    let data = {\n      name: this.categoryName,\n      categoryId: this.catId\n    }\n    $(\"#editCategory\").modal('hide');\n    this.categoryService.editCategory(data).subscribe(res => {\n      if(res.response_code == 200) {\n        this.loading = false;\n        this.getDataFromServer();\n        this.toastr.success(res.response_message);\n      } else {\n        this.toastr.success('Something went wrong!');\n      }\n    })\n  }\n\n  // deleteCategory(id) {\n  //   if(id && id != null){ \n  //     this.loading = true;\n  //     let confirmStatus = confirm(\"Do you really want to delete this category?\");\n  //     if(confirmStatus) {\n  //       this.categoryService.deleteCategory(id).subscribe(res => {\n  //         console.log(res)\n  //         if(res.response_code == 200) {\n  //           this.loading = false;\n  //           this.getDataFromServer();\n  //           this.toastr.success(res.response_message);\n  //         } else {\n  //           this.toastr.success('Something went wrong!');\n  //         }\n  //       });\n  //     }\n  //   }\n  // }\n\n}\n\n\n","import { NgModule ,} from '@angular/core';\nimport { CommonModule ,} from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { CategoryRoutingModule } from './category-routing.module';\nimport { CategoryComponent } from './category.component';\nimport {CategoryService} from './category.service';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  declarations: [CategoryComponent],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    CategoryRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    NgxLoadingModule.forRoot({})\n  ],\n  providers: [CategoryService]\n})\nexport class CategoryModule { }\n"],"sourceRoot":""}