{"version":3,"sources":["webpack:///./src/app/views/language-management/language-management.component.html","webpack:///./src/app/views/language-management/language-management.component.scss","webpack:///./src/app/views/language-management/language-management.component.ts","webpack:///./src/app/views/language-management/language.module.ts"],"names":[],"mappings":"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","file":"views-language-management-language-module.js","sourcesContent":["module.exports = \"<button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addLanguage\\\" style=\\\"margin-bottom: 10px;\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>Add Language</button>\\n\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Languages List\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-striped\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\n            <thead>\\n              <tr>\\n                <th>S.No.</th>\\n                <th>Language</th>\\n                <th>Created On</th>\\n                <th>Updated On</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor = \\\"let x of languageData; let i = index;\\\">\\n                <td>{{i+1}}</td>\\n                <td>{{x?.language}}</td>\\n                <td>{{x.createdAt | date: 'dd/MM/yyyy'}}</td>\\n                <td>{{x.updatedAt | date: 'dd/MM/yyyy'}}</td>\\n                <td>\\n                  <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"getLanguage(x._id)\\\" data-target=\\\"#editLanguage\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>Edit</button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteLangauge(x._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"addLanguage\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Add Language</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"addLanguageForm.reset()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n             <form [formGroup]=\\\"addLanguageForm\\\" (ngSubmit)=\\\"addLanguage()\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label>Language</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"language\\\"> \\n                      </div>\\n                      <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addLanguageForm.controls['language'].invalid && (formSubmited || addLanguageForm.controls['language'].dirty)\\\">Please enter language</p>\\n                      <div class=\\\"form-group\\\">\\n                          <button class=\\\"btn btn-success\\\">Submit<img class=\\\"spinner_img\\\" src=\\\"assets/img/avatars/spinner.gif\\\"></button>\\n                      </div> \\n                  </div>\\n              </div>\\n              </form>\\n          </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"addLanguageForm.reset()\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n      </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"editLanguage\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit Language</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"editLanguageForm.reset()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n             <form [formGroup]=\\\"editLanguageForm\\\" (ngSubmit)=\\\"editLanguage()\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label>Language</label>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"language\\\"> \\n                      </div>\\n                      <p style=\\\"color: #FF0000\\\" *ngIf=\\\"editLanguageForm.controls['language'].invalid && (formSubmited || editLanguageForm.controls['language'].dirty)\\\">Please enter language</p>\\n                      <div class=\\\"form-group\\\">\\n                          <button class=\\\"btn btn-success\\\">Submit<img class=\\\"spinner_img\\\" src=\\\"assets/img/avatars/spinner.gif\\\"></button>\\n                      </div> \\n                  </div>\\n              </div>\\n              </form>\\n          </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"editLanguageForm.reset()\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n      </div>\\n  </div>\\n</div>\\n\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" [template]=\\\"customLoadingTemplate\\\"></ngx-loading>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2xhbmd1YWdlLW1hbmFnZW1lbnQvbGFuZ3VhZ2UtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../category/category.service';\nimport { Subject } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\ndeclare var $;\n@Component({\n  selector: 'app-language-management',\n  templateUrl: './language-management.component.html',\n  styleUrls: ['./language-management.component.scss']\n})\nexport class LanguageManagementComponent implements OnInit {\n  addLanguageForm: FormGroup;\n  editLanguageForm: FormGroup;\n  languageData: any;\n  id: any;\n  langData: any;\n  langId: string;\n  public loading = false;\n  dtTrigger: Subject<any> = new Subject();\n  formSubmited: boolean = false;\n  constructor(private fb: FormBuilder, private categoryService: CategoryService, private toastr:ToastrService) { \n    this.addLanguageForm = this.fb.group({\n      language: ['', [Validators.required]],\n    })\n    this.editLanguageForm = this.fb.group({\n      language: ['', [Validators.required]],\n    })\n  }\n\n  ngOnInit() {\n    this.languageList()\n  }\n\n  languageList(){\n    this.loading = true;\n    this.categoryService.getAllLanguage().subscribe(res => {\n      if(res.response_code == 200) {\n        this.loading = false;\n        this.languageData = res.Data\n        this.dtTrigger.next()\n      } \n    })\n  }\n\n  deleteLangauge(id){\n    if(id && id != null){ \n      let confirmStatus = confirm(\"Do you really want to delete this language?\");\n      if(confirmStatus) { \n        this.id=id;\n        let data = {\n          languageId:this.id\n        }\n        this.categoryService.deleteLangauge(data).subscribe(res => {\n          if(res.response_code == 200) {\n            this.languageList()\n          } \n        })\n      }\n    }\n  }\n\n  addLanguage(){\n    // this.loading = true;\n    this.formSubmited = true\n    if(this.addLanguageForm.invalid){\n      return\n    }\n    let data = {\n      language: this.addLanguageForm.value.language,\n    }\n    $('#addLanguage').modal('hide');\n    this.categoryService.addLanguage(data).subscribe(res => {\n      if(res.response_code == 200) {\n        // this.loading = false;\n        this.addLanguageForm.reset()\n        this.formSubmited = false\n        this.toastr.success(res.response_message);\n        this.languageList()\n      } else if(res.response_code == 501){\n        this.toastr.error(res.response_message);\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n  getLanguage(id){\n    this.langId = id\n    this.categoryService.getLanguage(id).subscribe(res => {\n      if(res.response_code == 200) {\n        this.langData = res.Data\n        this.editLanguageForm.patchValue({\n          language: this.langData.language\n        })\n      } \n    })\n  }\n\n  editLanguage(){\n    // this.loading = true;\n    this.formSubmited = true\n    if(this.editLanguageForm.invalid){\n      return\n    }\n    let data = {\n      language: this.editLanguageForm.value.language,\n      languageId: this.langId\n    }\n    $('#editLanguage').modal('hide');\n    this.categoryService.editLanguage(data).subscribe(res => {\n      if(res.response_code == 200) {\n        this.loading = false;\n        this.languageList()\n      } \n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from \"@angular/forms\";   \nimport { Routes, RouterModule } from '@angular/router';\nimport { LanguageManagementComponent } from \"./language-management.component\";\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgxLoadingModule } from 'ngx-loading';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:LanguageManagementComponent\n  }\n];\n@NgModule({\n  declarations: [LanguageManagementComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,ReactiveFormsModule,\n    DataTablesModule,\n    NgxLoadingModule.forRoot({})\n  ],\n  exports: [RouterModule],\n  \n})\nexport class LanguageModule { }\n"],"sourceRoot":""}