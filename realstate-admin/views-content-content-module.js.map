{"version":3,"sources":["webpack:///./src/app/views/content/content-routing.module.ts","webpack:///./src/app/views/content/content.component.html","webpack:///./src/app/views/content/content.component.scss","webpack:///./src/app/views/content/content.component.ts","webpack:///./src/app/views/content/content.module.ts"],"names":[],"mappings":"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","file":"views-content-content-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContentComponent } from './content.component';\nconst routes: Routes = [\n  {\n    path:'',\n    component:ContentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContentRoutingModule { }\n","module.exports = \"\\n<button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addContent\\\" style=\\\"margin-bottom: 10px;\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>Add Static Content</button>\\n\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Static Content List\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-striped\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\n            <thead>\\n              <tr>\\n                <th>S.No.</th>\\n                <th>Screen Name</th>\\n                <th>Title</th>\\n                <th>Description</th>\\n                <th>Created On</th>\\n                <th>Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let content of contents; let i = index;\\\">\\n                <td>{{i+1}}</td>\\n                <td>{{content.contentType}}</td>\\n                <td>\\n                  <span *ngIf=\\\"content.title.length>30\\\">\\n                    {{content.title.substring(0, 30)+'.....'}}\\n                  </span>\\n                  <span *ngIf=\\\"content.title.length<30\\\">\\n                    {{content.title}}\\n                  </span>\\n                </td>\\n                <td>\\n                  <span *ngIf=\\\"content.description.length>30\\\">\\n                    {{content.description.substring(0, 30)+'.....'}}\\n                  </span>\\n                  <span *ngIf=\\\"content.description.length<30\\\">\\n                    {{content.description}}\\n                  </span>\\n                </td>\\n                <td>{{content.created | date: 'dd/MM/yyyy'}}</td>\\n                <td>\\n                  <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"getContent(content._id)\\\" data-target=\\\"#editContent\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>Edit</button>\\n                  <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteContent(content._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"addContent\\\" >\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Static Content</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"addContentForm.reset()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"addContentForm\\\" (ngSubmit)=\\\"onContentSubmit()\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label>Screen Name</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"type\\\">\\n                              <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addContentForm.controls['type'].invalid && (formSubmited || addContentForm.controls['type'].dirty)\\\">Please enter screen name</p>\\n                            </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label>Title</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\">\\n                              <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addContentForm.controls['title'].invalid && (formSubmited || addContentForm.controls['title'].dirty)\\\">Please enter title</p>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                            <label>Description</label>\\n                            <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\"></textarea>\\n                            <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addContentForm.controls['description'].invalid && (formSubmited || addContentForm.controls['description'].dirty)\\\">Please enter description</p>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Submit</button>\\n                          </div> \\n                      </div>\\n                  </div>\\n              </form>\\n          </div>\\n  \\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"addContentForm.reset()\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n  \\n      </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"editContent\\\" > \\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit Static Content</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"editContentForm\\\" (ngSubmit)=\\\"onEditContentSubmit()\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                          <div class=\\\"form-group\\\">\\n                              <label>Screen Name</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"type\\\">\\n                              <p style=\\\"color: #FF0000\\\" *ngIf=\\\"editContentForm.controls['type'].invalid && (formSubmited || editContentForm.controls['type'].dirty)\\\">Please enter screen name</p>\\n                            </div>\\n                          <div class=\\\"form-group\\\">\\n                              <label>Title</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\">\\n                              <p style=\\\"color: #FF0000\\\" *ngIf=\\\"editContentForm.controls['title'].invalid && (formSubmited || editContentForm.controls['title'].dirty)\\\">Please enter title</p>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                            <label>Description</label>\\n                            <textarea type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\"></textarea>\\n                            <p style=\\\"color: #FF0000\\\" *ngIf=\\\"editContentForm.controls['description'].invalid && (formSubmited || editContentForm.controls['description'].dirty)\\\">Please enter description</p>\\n                          </div>\\n                          <div class=\\\"form-group\\\">\\n                              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Submit</button>\\n                          </div> \\n                      </div>\\n                  </div>\\n              </form>\\n          </div>\\n  \\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n      </div>\\n  </div>\\n</div>\\n\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" [template]=\\\"customLoadingTemplate\\\"></ngx-loading>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbnRlbnQvY29udGVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../category/category.service';\nimport { Subject } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\ndeclare var $;\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent implements OnInit {\n  dtTrigger: Subject<any> = new Subject();\n  contents: any = [];\n  contentId: string;\n  public loading = false;\n  formSubmited: boolean = false;\n  addContentForm: FormGroup;\n  editContentForm: FormGroup;\n  constructor(private fb: FormBuilder,\n    private categoryService: CategoryService,\n    private toastr:ToastrService) { \n    this.addContentForm = this.fb.group({\n      type:['',[Validators.required]],\n      title:['',[Validators.required]],\n      description:['',[Validators.required]],\n    }) \n    this.editContentForm = this.fb.group({\n      type:['',[Validators.required]],\n      title:['',[Validators.required]],\n      description:['',[Validators.required]],\n    }) \n    this.getDataFromServer();\n  }\n\n  ngOnInit() {\n  }\n\n  getDataFromServer() {\n    this.loading = true;\n    this.categoryService.contentList().subscribe(res => {\n      if(res.status == 'success') {\n        this.loading = false;\n        this.contents = res.data;\n        this.dtTrigger.next()\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    });\n  }\n\n  onContentSubmit() {\n    this.formSubmited = true\n    if(this.addContentForm.invalid){\n      return\n    }\n    let data = {\n      contentType: this.addContentForm.value.type,\n      title: this.addContentForm.value.title,\n      description: this.addContentForm.value.description\n    };\n    this.categoryService.addContent(data).subscribe(res => {\n      $('#addContent').modal('hide');\n      if(res.response_code == 200) {\n        this.addContentForm.reset()\n        this.formSubmited = false\n        this.toastr.success(res.response_message);\n        this.getDataFromServer()\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    });\n  }\n\n  getContent(id){\n    this.contentId = id\n    this.categoryService.getContentDetails(id).subscribe(res => {\n      if(res.response_code == 200) {\n        let content = res.Data;\n        this.editContentForm.patchValue({\n          type: content.contentType,\n          title: content.title,\n          description: content.description,\n        })\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })  \n  }\n\n  onEditContentSubmit(){\n    this.formSubmited = true\n    if(this.editContentForm.invalid){\n      return\n    }\n    let data = {\n      _id: this.contentId,\n      contentType: this.editContentForm.value.type,\n      title: this.editContentForm.value.title,\n      description: this.editContentForm.value.description\n    }\n    this.categoryService.editContent(data).subscribe(res => {\n      $('#editContent').modal('hide');\n      if(res.response_code == 200) {\n        this.toastr.success(res.response_message);\n        this.getDataFromServer();\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n\n  deleteContent(id){\n    if(id && id != null){ \n      let confirmStatus = confirm(\"Do you really want to delete this static content?\");\n      if(confirmStatus) {\n        this.categoryService.deleteContent(id).subscribe(res => {\n          if(res.response_code == 200) {\n            this.toastr.success(res.response_message);\n            this.getDataFromServer();\n          } else {\n            this.toastr.error('Something went wrong!');\n          }\n        });\n      }\n    }\n  }\n\n}\n","import { NgModule ,} from '@angular/core';\nimport { CommonModule ,} from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ContentRoutingModule } from './content-routing.module';\nimport { ContentComponent } from './content.component';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  declarations: [ContentComponent],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    ContentRoutingModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    NgxLoadingModule.forRoot({})\n  ],\n  providers: []\n})\nexport class ContentModule { }\n"],"sourceRoot":""}