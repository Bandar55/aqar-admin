{"version":3,"sources":["webpack:///./src/app/views/currency/currency.component.html","webpack:///./src/app/views/currency/currency.component.scss","webpack:///./src/app/views/currency/currency.component.ts","webpack:///./src/app/views/currency/currency.module.ts","webpack:///./src/app/views/currency/currency.service.ts"],"names":[],"mappings":"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","file":"views-currency-currency-module.js","sourcesContent":["module.exports = \"<button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addCurrency\\\" style=\\\"margin-bottom: 10px;\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>Add Currency</button>\\n\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Currencies List\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-striped\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\n            <thead>\\n              <tr>\\n                <th>S.No.</th>\\n                <th>Country Name</th>\\n                <th>Currency Type</th>\\n                <th>Currency Rate</th>\\n                <th>Created On</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor = \\\"let currency of currencies; let i = index;\\\">\\n                <td>{{i+1}}</td>\\n                <td>{{currency?.countryName}}</td>\\n                <td>{{currency?.currencyType}}</td>\\n                <td>{{currency?.currencyRate}}</td>\\n                <td>{{currency.created | date: 'dd/MM/yyyy'}}</td>\\n                <td>\\n                  <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editCurrency\\\" (click)=\\\"getDetails(currency._id)\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>Edit</button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteCurrency(currency._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"addCurrency\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Add Currency</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"addCurrencyForm.reset()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n             <form [formGroup]=\\\"addCurrencyForm\\\" (ngSubmit)=\\\"addCurrency()\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Country Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"countryName\\\"> \\n                        <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addCurrencyForm.controls['countryName'].invalid && (formSubmited || addCurrencyForm.controls['countryName'].dirty)\\\">Please enter country name</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label>Currency Type</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"currencyType\\\"> \\n                      <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addCurrencyForm.controls['currencyType'].invalid && (formSubmited || addCurrencyForm.controls['currencyType'].dirty)\\\">Please enter currency type</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label>Currency Rate</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"currencyRate\\\"> \\n                      <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addCurrencyForm.controls['currencyRate'].invalid && (formSubmited || addCurrencyForm.controls['currencyRate'].dirty)\\\">Please enter currency rate</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Submit</button>\\n                    </div> \\n                </div>\\n              </div>\\n              </form>\\n          </div>\\n  \\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"addCurrencyForm.reset()\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n  \\n      </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"editCurrency\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit Currency</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"editCurrencyForm.reset()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n             <form [formGroup]=\\\"editCurrencyForm\\\" (ngSubmit)=\\\"editCurrency()\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Country Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"countryName\\\"> \\n                        <p style=\\\"color: #FF0000\\\" *ngIf=\\\"editCurrencyForm.controls['countryName'].invalid && (formSubmited || editCurrencyForm.controls['countryName'].dirty)\\\">Please enter country name</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label>Currency Type</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"currencyType\\\"> \\n                      <p style=\\\"color: #FF0000\\\" *ngIf=\\\"editCurrencyForm.controls['currencyType'].invalid && (formSubmited || editCurrencyForm.controls['currencyType'].dirty)\\\">Please enter currency type</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label>Currency Rate</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"currencyRate\\\"> \\n                      <p style=\\\"color: #FF0000\\\" *ngIf=\\\"editCurrencyForm.controls['currencyRate'].invalid && (formSubmited || editCurrencyForm.controls['currencyRate'].dirty)\\\">Please enter currency rate</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <button class=\\\"btn btn-success\\\">Submit<img class=\\\"spinner_img\\\" src=\\\"assets/img/avatars/spinner.gif\\\"></button>\\n                    </div> \\n                </div>\\n              </div>\\n              </form>\\n          </div>\\n  \\n      <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"editCurrencyForm.reset()\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n  \\n      </div>\\n  </div>\\n</div>\\n\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" [template]=\\\"customLoadingTemplate\\\"></ngx-loading>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2N1cnJlbmN5L2N1cnJlbmN5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CurrencyService } from './currency.service';\nimport { Subject } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\ndeclare var $;\n\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.scss']\n})\nexport class CurrencyComponent implements OnInit {\n  addCurrencyForm: FormGroup;\n  editCurrencyForm: FormGroup;\n  currencies: any = [];\n  currencyData: any = {};\n  currencyId: string;\n  public loading = false;\n  dtTrigger: Subject<any> = new Subject();\n  formSubmited: boolean = false;\n\n  constructor(private fb: FormBuilder, \n    private currencyService: CurrencyService,\n    private toastr:ToastrService) {\n    this.addCurrencyForm = this.fb.group({\n      countryName:['',[Validators.required]],\n      currencyType:['',[Validators.required]],\n      currencyRate:['',[Validators.required]],\n    }) \n    this.editCurrencyForm = this.fb.group({\n      countryName:['',[Validators.required]],\n      currencyType:['',[Validators.required]],\n      currencyRate:['',[Validators.required]],\n    }) \n   }\n\n  ngOnInit() {\n    this.currencyList()\n  }\n\n  currencyList(){\n    this.loading = true;\n    this.currencyService.currencyList().subscribe(res => {\n      if(res.response_code == 200) {\n        this.loading = false;\n        this.currencies = res.Data\n        this.dtTrigger.next()\n      }\n    })\n  }\n\n  addCurrency(){\n    this.formSubmited = true\n    if(this.addCurrencyForm.invalid){\n      return\n    }\n    let data = {\n      countryName: this.addCurrencyForm.value.countryName,\n      currencyType: this.addCurrencyForm.value.currencyType,\n      currencyRate: this.addCurrencyForm.value.currencyRate\n    }\n    $('#addCurrency').modal('hide')\n    this.currencyService.addCurrency(data).subscribe(res => {\n      if(res.response_code == 200) {\n        this.addCurrencyForm.reset()\n        this.formSubmited = false\n        this.toastr.success(res.response_message);\n        this.currencyList()\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n  getDetails(id){\n    this.currencyId = id\n    this.currencyService.getCurrencyDetails(id).subscribe(res => {\n      if(res.response_code == 200) {\n        this.currencyData = res.Data\n        this.editCurrencyForm.patchValue({\n          countryName: this.currencyData.countryName,\n          currencyType: this.currencyData.currencyType,\n          currencyRate: this.currencyData.currencyRate\n        })\n      }\n    })\n  }\n\n  editCurrency(){\n    this.formSubmited = true\n    if(this.editCurrencyForm.invalid){\n      return\n    }\n    // this.loading = true;\n    let data = {\n      countryName: this.editCurrencyForm.value.countryName,\n      currencyType: this.editCurrencyForm.value.currencyType,\n      currencyRate: this.editCurrencyForm.value.currencyRate,\n      currencyId: this.currencyId\n    }\n    this.currencyService.editCurrency(data).subscribe(res => {\n      if(res.response_code == 200) {\n        // this.loading = false;\n        $('#editCurrency').modal('hide')\n        this.toastr.success(res.response_message);\n        this.currencyList()\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n  deleteCurrency(id){\n    if(id && id != null){ \n      let confirmStatus = confirm(\"Do you really want to delete this currency?\");\n      if(confirmStatus) { \n        this.currencyService.deleteCurrency(id).subscribe(res => {\n          if(res.response_code == 200) {\n            this.toastr.success(res.response_message);\n            this.currencyList();\n          } else {\n            this.toastr.error('Something went wrong!');\n          }\n        })\n      }\n    }   \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from \"@angular/forms\";   \nimport { Routes, RouterModule } from '@angular/router';\nimport { CurrencyComponent } from './currency.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgxLoadingModule } from 'ngx-loading';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:CurrencyComponent\n  }\n];\n@NgModule({\n  declarations: [CurrencyComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n    NgxLoadingModule.forRoot({})\n  ],\n  exports: [RouterModule],\n  \n})\nexport class CurrencyModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CurrencyService {\n    private apiUrlAdmin = 'http://18.189.223.53:3005/api/admin';\n    \n    httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\n\n    constructor(private http: HttpClient) {\n    }\n\n    addCurrency(data) {\n        return this.http.post<any>(`${this.apiUrlAdmin}/addCurrency`, data, this.httpOptions);\n    }\n    currencyList() {\n        return this.http.get<any>(`${this.apiUrlAdmin}/currencyList`, this.httpOptions);\n    }\n    getCurrencyDetails(id) {\n        return this.http.get<any>(`${this.apiUrlAdmin}/getCurrencyDetails/`+id, this.httpOptions);\n    }\n    editCurrency(data){\n        return this.http.post<any>(`${this.apiUrlAdmin}/editCurrency`, data, this.httpOptions);\n    }\n    deleteCurrency(id) {\n        return this.http.delete<any>(`${this.apiUrlAdmin}/deleteCurrency/`+id, this.httpOptions);\n    }\n}\n"],"sourceRoot":""}