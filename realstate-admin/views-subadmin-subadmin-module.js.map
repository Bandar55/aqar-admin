{"version":3,"sources":["webpack:///./src/app/views/subadmin/subadmin-routing.module.ts","webpack:///./src/app/views/subadmin/subadmin.component.html","webpack:///./src/app/views/subadmin/subadmin.component.scss","webpack:///./src/app/views/subadmin/subadmin.component.ts","webpack:///./src/app/views/subadmin/subadmin.module.ts","webpack:///./src/app/views/subadmin/subadmin.service.ts"],"names":[],"mappings":"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","file":"views-subadmin-subadmin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SubadminComponent } from './subadmin.component'\nconst routes: Routes = [\n  {\n    path:'',\n    component:SubadminComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class subAdminRoutingModule { }\n","module.exports = \"<button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#addSubadmin\\\" style=\\\"margin-bottom: 10px;\\\"><i\\n    class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>Add Sub Admin</button>\\n\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Subadmins List\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-striped\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\n            <thead>\\n              <tr>\\n                <th>S.No.</th>\\n                <th>User</th>\\n                <th>Email</th>\\n                <th>Created On</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngIf=\\\"subadmins.length == 0\\\">\\n                <td align=\\\"center\\\" colspan=\\\"5\\\">No data found</td>\\n              </tr>\\n              <tr *ngFor=\\\"let subadmin of subadmins; let i = index;\\\">\\n                <td>{{i+1}}</td>\\n                <td>{{subadmin?.name}}</td>\\n                <td>{{subadmin?.email}}</td>\\n                <td>{{subadmin.created | date: 'dd/MM/yyyy'}}</td>\\n                <td>\\n                  <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editSubadmin\\\"\\n                    (click)=\\\"getDetails(subadmin._id)\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>Edit</button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteSubadmin(subadmin._id)\\\"><i\\n                      class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"addSubadmin\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add Sub Admin</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"addsubadminForm.reset()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"addsubadminForm\\\" (ngSubmit)=\\\"addSubadmin()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"subadminname\\\">\\n                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addsubadminForm.controls['subadminname'].invalid && (formSubmited || addsubadminForm.controls['subadminname'].dirty)\\\">Please enter name</p>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addsubadminForm.controls['email'].invalid && \\n                    (formSubmited || addsubadminForm.controls['email'].dirty)\\\">\\n                    Please enter email</p>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addsubadminForm.controls['password'].invalid && \\n                (formSubmited || addsubadminForm.controls['password'].dirty)\\\">\\n                Please enter password</p>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Confirm Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"cnfpassword\\\">\\n                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addsubadminForm.controls['cnfpassword'].invalid && \\n                (formSubmited || addsubadminForm.controls['cnfpassword'].dirty)\\\">\\n                Please enter confirm password</p>\\n                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"msg\\\">{{msg}}</p>\\n              </div>\\n              <label>Role</label>\\n              <div class=\\\"checkbox\\\">\\n                <div *ngFor=\\\"let nav of navItems\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" class=\\\"checkbox\\\" [attr.data-name]=\\\"nav.name\\\" [attr.data-url]=\\\"nav.url\\\" [attr.data-icon]=\\\"nav.icon\\\" >{{nav.name}}\\n                  </label>\\n                  <br>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <!-- <button class=\\\"btn btn-success\\\" [disabled]=\\\"!addCategoryForm.controls.valid\\\" style=\\\"display:flex;\\\">Submit<img class=\\\"spinner_img\\\" src=\\\"assets/img/avatars/spinner.gif\\\"></button> -->\\n                <button class=\\\"btn btn-success\\\">Submit<img class=\\\"spinner_img\\\"\\n                    src=\\\"assets/img/avatars/spinner.gif\\\"></button>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"addsubadminForm.reset()\\\"\\n          data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"editSubadmin\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Edit Sub Admin</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"editSubadminForm\\\" (ngSubmit)=\\\"editSubadmin()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"subadminname\\\">\\n                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addsubadminForm.controls['subadminname'].invalid && (formSubmited || addsubadminForm.controls['subadminname'].dirty)\\\">Please enter name</p>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n                <p style=\\\"color: #FF0000\\\" *ngIf=\\\"addsubadminForm.controls['email'].invalid && \\n                    (formSubmited || addsubadminForm.controls['email'].dirty)\\\">\\n                    Please enter email</p>\\n              </div>\\n              <div class=\\\"checkbox\\\">\\n                <div *ngFor=\\\"let nav of navItems\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" class=\\\"checkbox\\\" [attr.data-name]=\\\"nav.name\\\" [attr.data-url]=\\\"nav.url\\\" [attr.data-icon]=\\\"nav.icon\\\" >{{nav.name}}\\n                  </label>\\n                  <br>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-success\\\">Submit<img class=\\\"spinner_img\\\"\\n                    src=\\\"assets/img/avatars/spinner.gif\\\"></button>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"addsubadminForm.reset()\\\"\\n          data-dismiss=\\\"modal\\\">Cancel</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '3px' }\\\" [template]=\\\"customLoadingTemplate\\\">\\n</ngx-loading> -->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3N1YmFkbWluL3N1YmFkbWluLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport {SubadminService} from './subadmin.service';\nimport { Subject } from 'rxjs';\nimport { navItems } from '../../_nav';\nimport { ToastrService } from 'ngx-toastr';\n\ndeclare var $;\n@Component({\n  selector: 'app-subadmin',\n  templateUrl: './subadmin.component.html',\n  styleUrls: ['./subadmin.component.scss']\n})\nexport class SubadminComponent implements OnInit {\n  public navItems = navItems\n  addsubadminForm: FormGroup;\n  editSubadminForm: FormGroup;\n  subadmins: any = [];\n  subAdminData: any = {};\n  subadminId: ''\n  dtTrigger: Subject<any> = new Subject();\n  formSubmited: boolean = false;\n  msg: string;\n  constructor(private fb: FormBuilder, private subadminService: SubadminService,private toastr:ToastrService) { \n    this.addsubadminForm = this.fb.group({\n      subadminname:['',[Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n      password:['',Validators.required],\n      cnfpassword:['',Validators.required],\n    })\n    this.editSubadminForm = this.fb.group({\n      subadminname:['',[Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n      // UserPermission: ['',Validators.required],\n      // propertyPermission: ['',Validators.required],\n      // categoryPermission: ['',Validators.required],\n      // marketPermission: ['',Validators.required],\n      // contentPermission: ['',Validators.required],\n    })\n  }\n\n  ngOnInit() {\n    this.subAdminList()\n  }\n\n  subAdminList(){\n    this.subadminService.subAdminList().subscribe(res => {\n      if(res.response_code == 200) {\n        this.subadmins = res.Data\n        this.dtTrigger.next()\n      } \n    })\n  }\n\n  getDetails(id){\n    this.subadminId = id\n    this.subadminService.getDetails(id).subscribe(res => {\n      if(res.response_code == 200) {\n        this.subAdminData = res.Data \n        console.log(this.subAdminData)\n        this.editSubadminForm.patchValue({\n          subadminname: this.subAdminData.name,\n          email: this.subAdminData.email,\n          UserPermission: this.subAdminData.permission[0],\n          propertyPermission: this.subAdminData.permission[1],\n          categoryPermission: this.subAdminData.permission[2],\n          marketPermission: this.subAdminData.permission[3],\n          contentPermission: this.subAdminData.permission[4],\n        })\n      } \n    })\n  }\n\n  deleteSubadmin(id){\n    this.subadminService.deleteSubadmin(id).subscribe(res => {\n      console.log(res)\n      if(res.response_code == 200) {\n        this.toastr.success(res.response_message);\n        // this.subAdminList()\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n  addSubadmin(){\n    this.formSubmited = true\n    if(this.addsubadminForm.invalid){\n      return\n    }\n    if(this.addsubadminForm.value.password != this.addsubadminForm.value.cnfpassword){\n      this.msg = 'New password and confirm password should match'\n      return   \n    }\n    let permission = [];\n    $(\".checkbox:checked\").each(function(){\n      permission.push({\n        name: $(this).data('name'),\n        url: $(this).data('url'),\n        icon: $(this).data('icon')\n      })\n    })\n    let data = {\n      name: this.addsubadminForm.value.subadminname,\n      email: this.addsubadminForm.value.email,\n      password: this.addsubadminForm.value.password,\n      permission: permission,\n      Type: 'Subadmin'\n    }\n    $('#addSubadmin').modal('hide');\n    this.subadminService.createSubadmin(data).subscribe(res => {\n      if(res.response_code == 200) {\n        this.toastr.success(res.response_message);\n        this.subAdminList()\n      } else if(res.response_code == 501){\n        this.toastr.error(res.response_message);\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n  editSubadmin(){\n    this.formSubmited = true\n    if(this.addsubadminForm.invalid){\n      return\n    }\n    let permission = [];\n    // permission.push(\n    //   this.editSubadminForm.value.UserPermission,\n    //   this.editSubadminForm.value.propertyPermission,\n    //   this.editSubadminForm.value.categoryPermission,\n    //   this.editSubadminForm.value.marketPermission,\n    //   this.editSubadminForm.value.contentPermission,\n    // )\n    $(\".checkbox:checked\").each(function(){\n      permission.push({\n        name: $(this).data('name'),\n        url: $(this).data('url'),\n        icon: $(this).data('icon')\n      })\n    })\n    let data = {\n      name: this.editSubadminForm.value.subadminname,\n      email: this.editSubadminForm.value.email, \n      id: this.subadminId,\n      permission: permission\n    }\n    $('#editSubadmin').hide()\n    this.subadminService.editSubadmin(data).subscribe(res => {\n      console.log(res)\n      if(res.response_code == 200) {\n        this.toastr.success(res.response_message);\n        this.subAdminList()\n      } else {\n        this.toastr.error('Something went wrong!');\n      }\n    })\n  }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from \"@angular/forms\";   \nimport { subAdminRoutingModule } from './subadmin-routing.module'\nimport { SubadminComponent } from './subadmin.component';\nimport { SubadminService } from './subadmin.service'\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgxLoadingModule } from 'ngx-loading';\n@NgModule({\n  declarations: [SubadminComponent],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    subAdminRoutingModule,\n    DataTablesModule,\n    NgxLoadingModule.forRoot({})\n  ],\n  providers: [SubadminService]\n})\nexport class SubAdminModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SubadminService {\n    private apiUrlAdmin = 'http://18.189.223.53:3005/api/admin';\n    \n    httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\n\n    constructor(private http: HttpClient) {\n    }\n\n    createSubadmin(data) {\n        return this.http.post<any>(`${this.apiUrlAdmin}/createSubadmin`, data, this.httpOptions);\n    }\n    subAdminList() {\n        return this.http.get<any>(`${this.apiUrlAdmin}/subAdminList`, this.httpOptions);\n    }\n    getDetails(id) {\n        return this.http.get<any>(`${this.apiUrlAdmin}/getSubadminDetails/`+id, this.httpOptions);\n    }\n    editSubadmin(data){\n        return this.http.post<any>(`${this.apiUrlAdmin}/editSubadmin`, data, this.httpOptions);\n    }\n    deleteSubadmin(id) {\n        return this.http.delete<any>(`${this.apiUrlAdmin}/deleteSubadmin/`+id, this.httpOptions);\n    }\n}\n"],"sourceRoot":""}