{"version":3,"sources":["webpack:///./src/app/views/category/category.service.ts","webpack:///./src/app/views/property/property.service.ts","webpack:///./src/app/views/user/user.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders,HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CategoryService {\n    private apiUrlUser = 'http://18.189.223.53:3005/api/user';\n    private apiUrlAdmin = 'http://18.189.223.53:3005/api/admin';\n    \n    httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllCategory() {\n        return this.http.get<any>(`${this.apiUrlUser}/categoryList`, this.httpOptions);\n    }\n\n    addCategory(data: any) {\n        return this.http.post<any>(`${this.apiUrlUser}/createCategory`, data, this.httpOptions);\n    }\n\n    editCategory(data){\n        return this.http.post<any>(`${this.apiUrlUser}/editCategory`, data, this.httpOptions);\n    }\n    deleteCategory(id){\n        return this.http.delete<any>(`${this.apiUrlUser}/deleteCategory/`+id, this.httpOptions);\n    }\n\n    addSubCategory(data: any) {\n        return this.http.post<any>(`${this.apiUrlUser}/createSubcategory`, data, this.httpOptions);\n    }\n\n    getSubCategory (data: any) {\n        return this.http.post<any>(`${this.apiUrlUser}/subcategoryList`, data, this.httpOptions)\n    }\n\n    getDetailsSubategory (data: any) {\n        return this.http.post<any>(`${this.apiUrlUser}/getDetailsSubcategory`, data, this.httpOptions)\n    }\n\n    editSubcategory(data: any) {\n        return this.http.post<any>(`${this.apiUrlUser}/editSubcategory`, data, this.httpOptions)\n    }\n\n    getById(id: number) {\n        return this.http.get<any>(`${this.apiUrlUser}/` + id, this.httpOptions);\n    }\n\n    deleteSubcategory(subcategoryId: string) {\n        return this.http.delete<any>(`${this.apiUrlUser}/deleteSubcategory/` + subcategoryId, this.httpOptions);\n    }\n\n    addMarketing(data: any, fileToUpload: File) {\n        let headers = new HttpHeaders();\n        headers.set('Content-Type', null);\n        headers.set('Accept', \"multipart/form-data\");\n        let params = new HttpParams();\n        const formData: FormData = new FormData();\n        formData.append('screenName', data.screenName);\n        formData.append('title', data.title);\n        formData.append('marketingImage', fileToUpload, fileToUpload.name); \n        return this.http.post<any>(`${this.apiUrlAdmin}/addMarketingPopup`, formData, { params, headers })\n    }\n\n    getMarketingPopup() {\n        return this.http.get<any>(`${this.apiUrlAdmin}/getMarketingPopup`, this.httpOptions);\n    }\n\n    getPopupDetails(id) {\n        return this.http.get<any>(`${this.apiUrlAdmin}/getPopupDetails/`+id, this.httpOptions);\n    }\n\n    editMarketingPopup(data: any, fileToUpload: File) {\n        let headers = new HttpHeaders();\n        headers.set('Content-Type', null);\n        headers.set('Accept', \"multipart/form-data\");\n        let params = new HttpParams();\n        const formData: FormData = new FormData();\n        if(fileToUpload){\n            formData.append('marketingImage', fileToUpload, fileToUpload.name);\n        } \n        formData.append('id', data.id);\n        formData.append('screenName', data.screenName);\n        formData.append('title', data.title);\n        // formData.append('marketingImage', fileToUpload, fileToUpload.name);\n        return this.http.post<any>(`${this.apiUrlAdmin}/editMarketingPopup/`, formData, { params, headers });\n    }\n\n    deletePopup(id){\n        return this.http.delete<any>(`${this.apiUrlAdmin}/deletePopup/`+id, this.httpOptions);\n    }\n\n    contentList() {\n        return this.http.get<any>(`${this.apiUrlUser}/getStaticContent`, this.httpOptions)\n    }\n\n    addContent(data) {\n        return this.http.post<any>(`${this.apiUrlAdmin}/addContent`, data, this.httpOptions)\n    }\n\n    getContentDetails(id){\n        return this.http.get<any>(`${this.apiUrlAdmin}/getContentDetails/`+id, this.httpOptions)\n    }\n\n    editContent(data){\n        return this.http.post<any>(`${this.apiUrlAdmin}/editContent`, data, this.httpOptions); \n    }\n\n    deleteContent(id){\n        return this.http.delete<any>(`${this.apiUrlAdmin}/deleteContent/`+id, this.httpOptions);\n    }\n\n    getAllLanguage() {\n        return this.http.post<any>(`${this.apiUrlAdmin}/getAllLanguage`, this.httpOptions);\n    }\n\n    addLanguage(data: any) {\n        return this.http.post<any>(`${this.apiUrlAdmin}/addLanguage`, data, this.httpOptions);\n    }\n\n    getLanguage(id){\n        return this.http.get<any>(`${this.apiUrlAdmin}/getLanguage/`+id, this.httpOptions)\n    }\n\n    editLanguage(data){\n        return this.http.post<any>(`${this.apiUrlAdmin}/updateLanguage`, data, this.httpOptions);\n    }\n\n    deleteLangauge(data){\n        return this.http.post<any>(`${this.apiUrlAdmin}/deleteLangauge`, data, this.httpOptions);\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders,HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PropertyService {\r\n    private apiUrlAdmin = 'http://18.189.223.53:3005/api/admin';\r\n    private apiUrlUser = 'http://18.189.223.53:3005/api/user';\r\n    \r\n    httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    getAllProperty() {\r\n      return this.http.get<any>(`${this.apiUrlAdmin}/getAllProperty`, this.httpOptions);\r\n    }\r\n\r\n    getNormalProperty() {\r\n      return this.http.get<any>(`${this.apiUrlAdmin}/getNormalProperty`, this.httpOptions);\r\n    }\r\n\r\n    getProfessionalProperty() {\r\n      return this.http.get<any>(`${this.apiUrlAdmin}/getProfessionalProperty`, this.httpOptions);\r\n    }\r\n\r\n    getPropertyDetails(id){\r\n      return this.http.get<any>(`${this.apiUrlAdmin}/getPropertyDetails/`+id, this.httpOptions)\r\n    }\r\n\r\n    editProperty(data){\r\n      return this.http.post<any>(`${this.apiUrlAdmin}/editProperty`, data, this.httpOptions)\r\n    }\r\n\r\n    deleteProperty(data){\r\n      return this.http.post<any>(`${this.apiUrlUser}/deleteProperty`, data, this.httpOptions);\r\n    }\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders,HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n    private apiUrlAdmin = 'http://18.189.223.53:3005/api/admin';\n    private apiUrlUser = 'http://18.189.223.53:3005/api/user';\n\n    \n    httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\n\n    constructor(private http: HttpClient) {\n    }\n    getAllUser() {\n      return this.http.get<any>(`${this.apiUrlAdmin}/getAllUser`, this.httpOptions);\n    }\n    totalRegisterUser() {\n      return this.http.get<any>(`${this.apiUrlAdmin}/totalRegisterUser`, this.httpOptions);\n    }\n\n    create(data: any, fileToUpload: File) {\n      console.log(data, fileToUpload)\n      let headers = new HttpHeaders();\n      headers.set('Content-Type', null);\n      headers.set('Accept', \"multipart/form-data\");\n      let params = new HttpParams();\n      const formData: FormData = new FormData();\n      formData.append('prdfile', fileToUpload, fileToUpload.name);\n      formData.append('user_id', data.user_id);\n      return this.http.post<any>(`${this.apiUrlAdmin}/createUser`, data, this.httpOptions);\n  }\n\n  getUserById(userId: string) {\n    return this.http.get<any>(`${this.apiUrlAdmin}/getUserDetails/` + userId, this.httpOptions)\n  }\n\n  deleteUser(userId: string) {\n    return this.http.delete<any>(`${this.apiUrlAdmin}/deleteUser/` + userId, this.httpOptions);\n  }\n\n  normalUser(){\n      return this.http.get<any>(`${this.apiUrlAdmin}/totalRegisterUser`, this.httpOptions);\n  }\n\n  professionalUser() {\n      return this.http.get<any>(`${this.apiUrlAdmin}/totalRegisterProfessional`, this.httpOptions);\n  }\n\n  businessUser() {\n      return this.http.get<any>(`${this.apiUrlAdmin}/totalRegisterBusiness`, this.httpOptions);\n  }\n\n  postedTotalProperty() {\n      return this.http.get<any>(`${this.apiUrlAdmin}/postedTotalProperty`, this.httpOptions);\n  }\n\n  // verify(id){\n  //   return this.http.get<any>(`${this.apiUrlAdmin}blockAndVerifyUser/`+id, this.httpOptions);\n  // }\n\n  blockAndVerifyUser(data){\n    return this.http.post<any>(`${this.apiUrlAdmin}/blockAndVerifyUser`, data, this.httpOptions);\n  }\n\n  delete(data){\n    return this.http.post<any>(`${this.apiUrlUser}/deleteBusinessProfessionalProfile`, data, this.httpOptions);\n  }\n\n  report(data){\n    return this.http.post<any>(`${this.apiUrlUser}/replyAdmin`, data, this.httpOptions);\n  }\n\n  reportDet(data){\n    return this.http.post<any>(`${this.apiUrlUser}/getAdminContactDetails`, data, this.httpOptions);\n  }\n\n\n    \n}\n"],"sourceRoot":""}